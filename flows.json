[
    {
        "id": "e9b24c30a4540620",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "23d5d9426743cb56",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "592d507661a9a882",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "a7daadaa5a2947d6",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "64d574e29cf605ab",
        "type": "ui_tab",
        "name": "Test",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7f7b8c3f581c6672",
        "type": "ui_group",
        "name": "TestRed",
        "tab": "64d574e29cf605ab",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b8c776276a85b9c3",
        "type": "mqtt-broker",
        "name": "",
        "broker": "e6edc5b736244764a5f0d8308552e75d.s1.eu.hivemq.cloud",
        "port": "8883",
        "tls": "8ccd3f9086feb669",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "8ccd3f9086feb669",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "eaebe7e05e225653",
        "type": "users_config",
        "appPath": "/login",
        "jwtCookieName": "nr.nodeUsers.jwt",
        "jwtHttpsOnly": false
    },
    {
        "id": "54ee414d70c7c741",
        "type": "ui_tab",
        "name": "Temperature",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b863aa36b735aee4",
        "type": "ui_group",
        "name": "Temp",
        "tab": "54ee414d70c7c741",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "462dd7a2eb8347e6",
        "type": "ui_button",
        "z": "e9b24c30a4540620",
        "name": "",
        "group": "7f7b8c3f581c6672",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "GetData",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "GET",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 280,
        "y": 120,
        "wires": [
            [
                "3b14f52155c6b3fc"
            ]
        ]
    },
    {
        "id": "2b7a781f509c707c",
        "type": "mqtt out",
        "z": "e9b24c30a4540620",
        "name": "",
        "topic": "20127047/iot/res",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a7daadaa5a2947d6",
        "x": 750,
        "y": 120,
        "wires": []
    },
    {
        "id": "20c568340f5a1e9a",
        "type": "function",
        "z": "e9b24c30a4540620",
        "name": "ReceiveDataHandler",
        "func": "if(!msg.payload){\n    msg.payload = {\n        \"mq2\":0,\n        \"mq135\":0\n    }\n    return msg\n}\nmsg.payload = JSON.parse(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 260,
        "wires": [
            [
                "9236e00c673334e0",
                "e7eb308e52db6319",
                "400fa5803592d5ec"
            ]
        ]
    },
    {
        "id": "c16f246dbf71eb5d",
        "type": "mqtt in",
        "z": "e9b24c30a4540620",
        "name": "",
        "topic": "20127047/iot/res",
        "qos": "2",
        "datatype": "auto",
        "broker": "a7daadaa5a2947d6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 260,
        "wires": [
            [
                "20c568340f5a1e9a"
            ]
        ]
    },
    {
        "id": "9236e00c673334e0",
        "type": "ui_gauge",
        "z": "e9b24c30a4540620",
        "name": "",
        "group": "7f7b8c3f581c6672",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "MQ2",
        "label": "units",
        "format": "{{msg.payload[\"mq2\"]}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 770,
        "y": 200,
        "wires": []
    },
    {
        "id": "e7eb308e52db6319",
        "type": "ui_gauge",
        "z": "e9b24c30a4540620",
        "name": "",
        "group": "7f7b8c3f581c6672",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "MQ135",
        "label": "units",
        "format": "{{msg.payload[\"mq135\"]}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 780,
        "y": 320,
        "wires": []
    },
    {
        "id": "3b14f52155c6b3fc",
        "type": "function",
        "z": "e9b24c30a4540620",
        "name": "RandomDataGenerate",
        "func": "max = 100;\nmin = 0;\nmsg.payload = {\n    \"mq2\":Math.round(Math.random()*(max - min) + min),\n    \"mq135\":Math.round(Math.random()*(max - min) + min)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 120,
        "wires": [
            [
                "2b7a781f509c707c",
                "11acb04ab2e2dd7d"
            ]
        ]
    },
    {
        "id": "400fa5803592d5ec",
        "type": "debug",
        "z": "e9b24c30a4540620",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 260,
        "wires": []
    },
    {
        "id": "11acb04ab2e2dd7d",
        "type": "debug",
        "z": "e9b24c30a4540620",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 40,
        "wires": []
    },
    {
        "id": "5822246a1e45414b",
        "type": "inject",
        "z": "e9b24c30a4540620",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "aa06254f2206ad78"
            ]
        ]
    },
    {
        "id": "aa06254f2206ad78",
        "type": "function",
        "z": "e9b24c30a4540620",
        "name": "Send Test Push Notification",
        "func": "const API_KEY = \"ZTM4MDBjMmUtNWQzYi00MDQzLTg4MjYtM2QyNDg5MzYwNDI2\";\nconst ONESIGNAL_APP_ID = \"5226e28a-1e7a-44d8-b695-408542c59102\";\nconst BASE_URL = \"https://onesignal.com/api/v1\";\nconst body = {\n    app_id: ONESIGNAL_APP_ID,\n    included_segments: ['Subscribed Users'],\n    data: {\n    \tfoo: 'bar',\n    },\n    contents: {\n    \ten: `Notification \n    \tHello from node red`,\n    },\n};\nmsg.payload = body\nmsg.headers = {\n    'Content-Type': 'application/json',\n    'Authorization': `Basic ${API_KEY}`\n}\n//msg.payload = body ? JSON.stringify(body) : null\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 460,
        "wires": [
            [
                "226f050be12f2cd1",
                "214832ddb360c885"
            ]
        ]
    },
    {
        "id": "214832ddb360c885",
        "type": "http request",
        "z": "e9b24c30a4540620",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://onesignal.com/api/v1/notifications",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 790,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "531c17596adb9baa",
        "type": "inject",
        "z": "e9b24c30a4540620",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "226f050be12f2cd1",
        "type": "debug",
        "z": "e9b24c30a4540620",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 420,
        "wires": []
    },
    {
        "id": "f5160696640108c3",
        "type": "ui_dropdown",
        "z": "23d5d9426743cb56",
        "name": "",
        "label": "Select City",
        "tooltip": "",
        "place": "Select City",
        "group": "b863aa36b735aee4",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "HoChiMinh",
                "value": 1566083,
                "type": "num"
            },
            {
                "label": "ThanhHoa",
                "value": 1566166,
                "type": "num"
            },
            {
                "label": "HaNoi",
                "value": 1581130,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 150,
        "y": 400,
        "wires": [
            [
                "864a9f96f2c13d6b"
            ]
        ]
    },
    {
        "id": "864a9f96f2c13d6b",
        "type": "http request",
        "z": "23d5d9426743cb56",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.openweathermap.org/data/2.5/weather?id={{payload}}&appid=339ef9607a68655dad113f65318683d2&units=metric",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 390,
        "y": 400,
        "wires": [
            [
                "71c5cd1b0725a5fe"
            ]
        ]
    },
    {
        "id": "71c5cd1b0725a5fe",
        "type": "json",
        "z": "23d5d9426743cb56",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 400,
        "wires": [
            [
                "174610e8b0c87b5a"
            ]
        ]
    },
    {
        "id": "174610e8b0c87b5a",
        "type": "function",
        "z": "23d5d9426743cb56",
        "name": "ReceiveTemperatureHandler",
        "func": "msg.temp = msg.payload.main.temp | 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 400,
        "wires": [
            [
                "76be9ea39fb2a36d"
            ]
        ]
    },
    {
        "id": "76be9ea39fb2a36d",
        "type": "ui_gauge",
        "z": "23d5d9426743cb56",
        "name": "",
        "group": "b863aa36b735aee4",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "{{payload.name}}",
        "label": "Celcius",
        "format": "{{temp}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#0080ff",
            "#00ff40",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1030,
        "y": 400,
        "wires": []
    },
    {
        "id": "af2d21a395f61a7c",
        "type": "inject",
        "z": "23d5d9426743cb56",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 220,
        "wires": [
            [
                "ca06e46c8c14a12a"
            ]
        ]
    },
    {
        "id": "b1104f2f5d68c40b",
        "type": "http request",
        "z": "23d5d9426743cb56",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "api.thingspeak.com/update?api_key=J5UGBRQEKIKN7O3L&field1={{random}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 530,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ca06e46c8c14a12a",
        "type": "function",
        "z": "23d5d9426743cb56",
        "name": "Generate Random",
        "func": "msg.random = Math.ceil(Math.random() * 100);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 160,
        "wires": [
            [
                "b1104f2f5d68c40b"
            ]
        ]
    }
]